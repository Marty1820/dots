#!/usr/bin/env bash

status() {
  local dev_status active_conns wifi_list
  dev_status=$(nmcli -t -f DEVICE,TYPE,STATE device status)
  active_conns=$(nmcli -t -f NAME,DEVICE connection show --active)
  wifi_list=$(nmcli -t -f IN-USE,SIGNAL device wifi list)

  # Airplane mode (rfkill only checked here)
  if [[ $(rfkill list wifi 2>/dev/null) == *"Soft blocked: yes"* ]]; then
    printf '{"icon":"","class":"blocked","name":"Airplane Mode"}\n'
    return
  fi

  # First Wi-Fi device
  local iface name="" icon="" cls=""
  while IFS=: read -r dev type state; do
    [[ $type == wifi ]] && iface=$dev && break
  done <<<"$dev_status"

  if [[ -z $iface ]]; then
    name="No Wi-Fi Device" icon="" cls="blocked"
  else
    # Active Wi-Fi connection for iface
    while IFS=: read -r nm dev; do
      [[ $dev == "$iface" ]] && name=$nm && break
    done <<<"$active_conns"

    if [[ -n $name ]]; then
      # Wi-Fi strength
      local strength
      while IFS=: read -r mark s _; do
        [[ $mark == "*" ]] && strength=$s && break
      done <<<"$wifi_list"

      case $strength in
        8[0-9]|9[0-9]|100)    icon="󰤨" ;;
        6[0-9]|7[0-9])        icon="󰤥" ;;
        3[0-9]|4[0-9]|5[0-9]) icon="󰤢" ;;
        [1-9]|[1-2][0-9])     icon="󰤟" ;;
        *)                    icon="󰤯" ;;
      esac
      cls="up"
    else
      # Wired check
      while IFS=: read -r dev type state; do
        if [[ $type == ethernet && $state == connected ]]; then
          name="Wired" icon="󰈀" cls="wired" && break
        fi
      done <<<"$dev_status"

      [[ -z $name ]] && name="Disconnected" icon="󰤭" cls="down"
    fi
  fi

  printf '{"icon":"%s","class":"%s","name":"%s"}\n' \
    "$icon" "$cls" "$name"
}

# Monitor loop
nmcli -t monitor | while read -r; do
  status
done
